// Code generated by goctl. DO NOT EDIT!
// Source: chat.proto

package chatservice

import (
	"context"

	"go-back/chat/rpc/chat"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	TestRequst   = chat.TestRequst
	TestResponse = chat.TestResponse

	ChatService interface {
		TestGroupIdList(ctx context.Context, in *TestRequst, opts ...grpc.CallOption) (*TestResponse, error)
	}

	defaultChatService struct {
		cli zrpc.Client
	}
)

func NewChatService(cli zrpc.Client) ChatService {
	return &defaultChatService{
		cli: cli,
	}
}

func (m *defaultChatService) TestGroupIdList(ctx context.Context, in *TestRequst, opts ...grpc.CallOption) (*TestResponse, error) {
	client := chat.NewChatServiceClient(m.cli.Conn())
	return client.TestGroupIdList(ctx, in, opts...)
}
