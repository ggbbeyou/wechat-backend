// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	friend "go-back/user/api/internal/handler/friend"
	group "go-back/user/api/internal/handler/group"
	user "go-back/user/api/internal/handler/user"
	"go-back/user/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: user.UserLoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/info",
					Handler: user.UserInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/chatlist",
					Handler: user.UserChatListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/savechatlist",
					Handler: user.SaveChatListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/user"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/flist",
					Handler: friend.FriendListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/finfo",
					Handler: friend.FriendDetailHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/friend"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/glist",
					Handler: group.GroupListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/ginfo",
					Handler: group.GroupInfoHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/group"),
	)
}
